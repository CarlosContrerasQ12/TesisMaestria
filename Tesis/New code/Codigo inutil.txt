Codigo inutil


function one_agent_brownian(dom::EmptyRoom,sig,dt,path_length,X0,dirichlet_cut=false,neumann_cut=false)
    sqdt=sqrt(dt)
    X=zeros(type,(path_length,2))
    X[1,:]=X0
    xis=randn(type,(path_length-1,2))
    dtf=type(1.0)
    for i in 2:path_length
        Xn=X[i-1,:]+sqdt*sig*xis[i-1,:]
        Xnew,exit,dtf=exited_domain(dom,X[i-1,:],Xn)
        if exit=="Neu"
            if !neumann_cut
                Xn=Xnew+sqrt(dt*(1-dtf))*sig*randn(type,2)
                Xs,e,dtf2=exited_domain(dom,Xnew,Xn)
                while e!="Non"
                    Xn=Xnew+sqrt(dt*(1-dtf))*sig*randn(type,2)
                    Xs,e,dtf2=exited_domain(dom,Xnew,Xn)
                end
                X[i,:]=Xs
                xis[i-1,:]=(X[i,:]-X[i-1,:])/(sqdt*sig)
            else
                X[i,:]=Xnew
                return X[begin:i],xis[begin:i-1],dtf
            end
        elseif exit=="Dir"
            if !dirichlet_cut
                X[i,:]=Xnew
                X[i+1:end,:]=vcat(repeat([[1.0,dom.pInf+0.5*dom.pAnc]],size(X[i+1:end,:])[1])...)
                xis[i:end,:].=type(0.0)
                return X,xis,dtf
            else
                X[i,:]=Xnew
                return X[begin:i,:],xis[begin:i-1,:],dtf
            end
        elseif exit=="Non"
            X[i,:]=Xnew
        end
    end
    return X,xis,dtf
end

function simulate_one_path_Nagents(dom::EmptyRoom,sigma,dt,t0,total_time,X0,Nmax,Nagents,dirichlet_cut=true,neumann_cut=false)
    if t0>total_time-dt
        t0-=2*dt
    end
    tsim=Int(floor((total_time-t0)/dt))
    Nsim=Int(min(Nmax,tsim))#+2
    Xc,xic,dtf=one_agent_brownian(dom,sigma,dt,Nsim,X0[1:2],dirichlet_cut,neumann_cut)
    X=zeros((size(Xc)[1],Nagents*2))
    Xis=zeros((size(Xc)[1]-1,Nagents*2))
    X[:,1:2]=Xc
    Xis[:,1:2]=xic

    for i in 1:(Nagents-1)
        Xi,xi,dtfi=one_agent_brownian(dom,sigma,dt,size(Xc)[1],X0[2*i+1:2*i+2],false,false)
        X[:,2*i+1:2*i+2]=Xi
        Xis[:,2*i+1:2*i+2]=xi
    end
    t=collect(LinRange(t0,(size(Xc)[1]-1)*dt,size(Xc)[1]))
    t[end]=t[end-1]+dt*dtf
    return t,X,Xis
end

function simulate_N_brownian_samples(dom::EmptyRoom,sigma,dt,t0,total_time,X0,Nmax,Nagents,n_samples)
    samples=Array{Any}(undef,n_samples)
    for i in 1:n_samples
        resp=simulate_one_path_Nagents(dom,sigma,dt,t0,total_time,X0,Nmax,Nagents)
        samples[i]=resp
    end
    return samples
end

function simulate_N_brownian_samples_threaded(dom::EmptyRoom,sigma,dt,t0,total_time,X0,Nmax,Nagents,n_samples)
    samples=Array{Any}(undef,n_samples)
    Threads.@threads for i in 1:n_samples
        resp=simulate_one_path_Nagents(dom,sigma,dt,t0,total_time,X0,Nmax,Nagents)
        samples[i]=resp
    end
    return samples
end